// Code generated by "stringer -type=Encoding"; DO NOT EDIT.

package encodings

import "strconv"

const _Encoding_name = "UnknownPCMADPCMIEEE_FloatVSELPIBM_CSVDALawMuLawDTSWMA_Voice9OKI_ADPCMDVI_ADPCMMEDIASPACE_ADPCMSIERRA_ADPCMG723_ADPCMDIGISTDDIGIFIXDIALOGIC_OKI_ADPCMMEDIAVISION_ADPCMCU_CODECYAMAHA_ADPCMSONARCTRUESPEECHECHOSC1AUDIOFILE_AF36APTXAUDIOFILE_AF10PROSODY_1612LRCAC2GSM610MSNAUDIOANTEX_ADPCMECONTROL_RES_VQLPCDIGIREALDIGIADPCMCONTROL_RES_CR10VBXADPCMROLAND_RDACECHOSC3ROCKWELL_ADPCMROCKWELL_DIGITALKXEBECG721_ADPCMG728_CELPMSG723MPEGRT24MPEGLAYER3CIRRUSESPCMVOXWARECANOPUS_ATRACG726_ADPCMG722_ADPCMDSATDSAT_DISPLAYVOXWARE_BYTE_ALIGNEDVOXWARE_AC8VOXWARE_AC10VOXWARE_AC16VOXWARE_AC20VOXWARE_RT24VOXWARE_RT29VOXWARE_RT29HWVOXWARE_VR12VOXWARE_VR18VOXWARE_TQ40SOFTSOUNDVOXWARE_TQ60MSRT24G729AMVI_MV12DF_G726DF_GSM610ISIAUDIOONLIVESBC24DOLBY_AC3_SPDIFZYXEL_ADPCMPHILIPS_LPCBBPACKEDRAW_AACRHETOREX_ADPCMIRATVIVO_G723VIVO_SIRENDIGITAL_G723Sanyo_LD_ADPCMCREATIVE_ADPCMCREATIVE_FASTSPEECH8CREATIVE_FASTSPEECH10QUARTERDECKFM_TOWNS_SNDBTV_DIGITALVME_VMPCMOLIGSMOLIADPCMOLICELPOLISBCOLIOPRLH_CODECNORRISISIAUDIO2SOUNDSPACE_MUSICOMPRESSDVMEXTENSIBLEDEVELOPMENT"

var _Encoding_map = map[Encoding]string{
	0:     _Encoding_name[0:7],
	1:     _Encoding_name[7:10],
	2:     _Encoding_name[10:15],
	3:     _Encoding_name[15:25],
	4:     _Encoding_name[25:30],
	5:     _Encoding_name[30:38],
	6:     _Encoding_name[38:42],
	7:     _Encoding_name[42:47],
	8:     _Encoding_name[47:50],
	10:    _Encoding_name[50:60],
	16:    _Encoding_name[60:69],
	17:    _Encoding_name[69:78],
	18:    _Encoding_name[78:94],
	19:    _Encoding_name[94:106],
	20:    _Encoding_name[106:116],
	21:    _Encoding_name[116:123],
	22:    _Encoding_name[123:130],
	23:    _Encoding_name[130:148],
	24:    _Encoding_name[148:165],
	25:    _Encoding_name[165:173],
	32:    _Encoding_name[173:185],
	33:    _Encoding_name[185:191],
	34:    _Encoding_name[191:201],
	35:    _Encoding_name[201:208],
	36:    _Encoding_name[208:222],
	37:    _Encoding_name[222:226],
	38:    _Encoding_name[226:240],
	39:    _Encoding_name[240:252],
	40:    _Encoding_name[252:255],
	48:    _Encoding_name[255:258],
	49:    _Encoding_name[258:264],
	50:    _Encoding_name[264:272],
	51:    _Encoding_name[272:284],
	52:    _Encoding_name[284:301],
	53:    _Encoding_name[301:309],
	54:    _Encoding_name[309:318],
	55:    _Encoding_name[318:334],
	56:    _Encoding_name[334:342],
	57:    _Encoding_name[342:353],
	58:    _Encoding_name[353:360],
	59:    _Encoding_name[360:374],
	60:    _Encoding_name[374:391],
	61:    _Encoding_name[391:396],
	64:    _Encoding_name[396:406],
	65:    _Encoding_name[406:415],
	66:    _Encoding_name[415:421],
	80:    _Encoding_name[421:425],
	81:    _Encoding_name[425:429],
	85:    _Encoding_name[429:439],
	89:    _Encoding_name[439:445],
	97:    _Encoding_name[445:450],
	98:    _Encoding_name[450:457],
	99:    _Encoding_name[457:470],
	100:   _Encoding_name[470:480],
	101:   _Encoding_name[480:490],
	102:   _Encoding_name[490:494],
	103:   _Encoding_name[494:506],
	105:   _Encoding_name[506:526],
	112:   _Encoding_name[526:537],
	113:   _Encoding_name[537:549],
	114:   _Encoding_name[549:561],
	115:   _Encoding_name[561:573],
	116:   _Encoding_name[573:585],
	117:   _Encoding_name[585:597],
	118:   _Encoding_name[597:611],
	119:   _Encoding_name[611:623],
	120:   _Encoding_name[623:635],
	121:   _Encoding_name[635:647],
	128:   _Encoding_name[647:656],
	129:   _Encoding_name[656:668],
	130:   _Encoding_name[668:674],
	131:   _Encoding_name[674:679],
	132:   _Encoding_name[679:687],
	133:   _Encoding_name[687:694],
	134:   _Encoding_name[694:703],
	136:   _Encoding_name[703:711],
	137:   _Encoding_name[711:717],
	145:   _Encoding_name[717:722],
	146:   _Encoding_name[722:737],
	151:   _Encoding_name[737:748],
	152:   _Encoding_name[748:761],
	153:   _Encoding_name[761:767],
	255:   _Encoding_name[767:774],
	256:   _Encoding_name[774:788],
	257:   _Encoding_name[788:792],
	273:   _Encoding_name[792:801],
	274:   _Encoding_name[801:811],
	291:   _Encoding_name[811:823],
	293:   _Encoding_name[823:837],
	512:   _Encoding_name[837:851],
	514:   _Encoding_name[851:871],
	515:   _Encoding_name[871:892],
	544:   _Encoding_name[892:903],
	768:   _Encoding_name[903:915],
	1024:  _Encoding_name[915:926],
	1664:  _Encoding_name[926:935],
	4096:  _Encoding_name[935:941],
	4097:  _Encoding_name[941:949],
	4098:  _Encoding_name[949:956],
	4099:  _Encoding_name[956:962],
	4100:  _Encoding_name[962:968],
	4352:  _Encoding_name[968:976],
	5120:  _Encoding_name[976:982],
	5121:  _Encoding_name[982:991],
	5376:  _Encoding_name[991:1014],
	8192:  _Encoding_name[1014:1017],
	65534: _Encoding_name[1017:1027],
	65535: _Encoding_name[1027:1038],
}

func (i Encoding) String() string {
	if str, ok := _Encoding_map[i]; ok {
		return str
	}
	return "Encoding(" + strconv.FormatInt(int64(i), 10) + ")"
}
